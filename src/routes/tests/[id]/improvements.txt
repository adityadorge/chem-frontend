Add to page

Supplier profile and trust
    Accreditations: GLP, ISO/IEC 17025, CAP, CLIA
Sample requirements and logistics
    Volume, containers, preservatives, storage temp, biosafety level    
    Sample retention and disposal policy
past project highlights


<script lang="ts">
  import { onMount } from "svelte";
  import { page } from "$app/stores";
  import { Toaster, toast } from "svelte-sonner";
  import { user, isAuthenticated } from "$lib/store";
  import { get } from "svelte/store";
  import { goto } from "$app/navigation";

  interface Test {
    id: number;
    test_name: string;
    image_url: string;
    test_description: string;
    test_price: number;
  }

  let test: Test | null = null;
  let loading = true;
  let error: string | null = null;

  let quantity = 1;
  let isLoading = false;

  const currentUser = get(user);
  $: id = $page.params.id;

  async function loadTest() {
    loading = true;
    error = null;
    try {
      const res = await fetch(`http://localhost:8000/app1/tests/${id}/`);
      if (!res.ok) throw new Error("Failed to fetch test");
      test = await res.json();
    } catch (e: unknown) {
      error = e instanceof Error ? e.message : "Failed to load";
    } finally {
      loading = false;
    }
  }

  onMount(loadTest);

  function increaseQuantity() {
    quantity++;
  }
  function decreaseQuantity() {
    if (quantity > 1) quantity--;
  }

  async function handleAddToCart() {
    if (!get(isAuthenticated)) {
      toast.error("Please login to add items to your cart.");
      return;
    }
    isLoading = true;
    try {
      const res = await fetch("http://localhost:8000/add-to-cart/", {
        method: "POST",
        headers: {
          Authorization: `Bearer ${currentUser.access_token}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ test_id: test?.id, quantity }),
      });
      const data = await res.json();
      if (!res.ok || data.status !== "success") {
        throw new Error(data.message || "Failed to add to cart");
      }
      toast.success(`Added ${quantity} ${test?.test_name} to cart!`);
    } catch (e: unknown) {
      toast.error(e instanceof Error ? e.message : "Failed to add to cart");
    } finally {
      isLoading = false;
    }
  }

  async function goToCheckout() {
    if (!get(isAuthenticated)) {
      toast.error("Please login before buying.");
      return;
    }
    isLoading = true;
    try {
      const res = await fetch("http://localhost:8000/add-to-ordersummary/", {
        method: "POST",
        headers: {
          Authorization: `Bearer ${currentUser.access_token}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ test_id: test?.id, quantity }),
      });
      const data = await res.json();
      if (!res.ok || data.status !== "success") {
        throw new Error(data.message || "Failed to add to order summary");
      }
      toast.success(`Added ${quantity} ${test?.test_name} to order summary!`);
      goto("/checkout");
    } catch (e: unknown) {
      toast.error(e instanceof Error ? e.message : "Failed to proceed");
    } finally {
      isLoading = false;
    }
  }

  // Helpers and UI placeholders (replace with real data when backend is ready)
  const currency = (n: number) =>
    n.toLocaleString("en-US", { style: "currency", currency: "USD" });

  type LineItem = { name: string; sub?: string; unit: number; qty: number };
  let lineItems: LineItem[] = [
    { name: "Animal Models and Studies", sub: "Animal costs", unit: 57500, qty: 1 },
    { name: "Animal Models and Studies", sub: "Study Duration", unit: 172500, qty: 1 },
    { name: "Animal Models and Studies", sub: "Final Report", unit: 74750, qty: 1 }
  ];
  $: orderTotal = lineItems.reduce((s, i) => s + i.unit * i.qty, 0);

  let activeTab: "Collaborate" | "Attachments" = "Collaborate";
</script>

<Toaster richColors />

<main class="mx-auto max-w-7xl px-4 py-6">
  {#if loading}
    <p>Loading...</p>
  {:else if error}
    <p class="text-red-600">{error}</p>
  {:else if test}
    <!-- Header -->
    <div class="flex items-start justify-between">
      <div>
        <h1 class="text-2xl md:text-3xl font-semibold text-gray-900">
          {test.test_name} â€“ {test?.supplier_name ?? "NovaSphere Labs"}
        </h1>

        <div class="mt-3 flex flex-wrap items-center gap-4">
          <span class="inline-flex items-center rounded-full bg-yellow-100 px-3 py-1 text-sm font-medium text-yellow-800">
            <span class="h-2 w-2 rounded-full bg-yellow-500 mr-2"></span> Negotiating
          </span>

          <div class="text-sm text-gray-600">
            <span class="font-medium text-gray-900">Owner</span> Avery Smith
          </div>
          <div class="text-sm text-gray-600">
            <span class="font-medium text-gray-900">Supplier</span> {test?.supplier_name ?? "NovaSphere Labs"}
          </div>
          <div class="text-sm text-gray-600 flex items-center gap-1">
            <svg class="h-4 w-4 text-yellow-500" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.967 0 1.371 1.24.588 1.81l-2.802 2.035a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.802-2.035a1 1 0 00-1.175 0L6.61 16.3c-.785.57-1.84-.197-1.54-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.973 8.72c-.783-.57-.379-1.81.588-1.81h3.462a1 1 0 00.95-.69l1.076-3.292z"/>
            </svg>
            <span class="font-medium text-gray-900">5</span>
            <span>(17 Ratings)</span>
          </div>
        </div>
      </div>

      <button
        class="rounded-md bg-indigo-600 px-4 py-2 text-white font-medium hover:bg-indigo-700 transition"
        on:click={() => {/* navigate to compare page later */}}>
        Compare Related Requests
      </button>
    </div>

    <!-- Main content -->
    <div class="mt-6 grid grid-cols-12 gap-6">
      <!-- Left: Summary + table -->
      <section class="col-span-12 lg:col-span-8">
        <!-- KPI cards -->
        <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
          <div class="rounded-xl border border-gray-200 bg-white p-4">
            <div class="text-sm text-gray-500">Total</div>
            <div class="mt-1 text-2xl font-semibold text-gray-900">{currency(orderTotal)}</div>
          </div>
          <div class="rounded-xl border border-gray-200 bg-white p-4">
            <div class="text-sm text-gray-500">Turnaround Time</div>
            <div class="mt-1 text-2xl font-semibold text-gray-900">3 months</div>
          </div>
          <div class="rounded-xl border border-gray-200 bg-white p-4">
            <div class="text-sm text-gray-500">Quote Valid Until</div>
            <div class="mt-1 text-2xl font-semibold text-gray-900">
              {new Date().toLocaleDateString("en-US")}
            </div>
          </div>
        </div>

        <!-- Quote table card -->
        <div class="mt-6 rounded-xl border border-gray-200 bg-white">
          <div class="flex items-center justify-end p-4">
            <button
              class="rounded-md bg-blue-600 px-4 py-2 text-white font-medium hover:bg-blue-700 transition"
              on:click={goToCheckout}>
              Accept
            </button>
          </div>

          <div class="px-4 pb-4">
            <div class="overflow-hidden rounded-lg border border-gray-200">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider text-gray-500">Name</th>
                    <th class="px-6 py-3 text-right text-xs font-medium uppercase tracking-wider text-gray-500">List Price</th>
                    <th class="px-6 py-3 text-right text-xs font-medium uppercase tracking-wider text-gray-500">Qty</th>
                    <th class="px-6 py-3 text-right text-xs font-medium uppercase tracking-wider text-gray-500">Total</th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-100">
                  {#each lineItems as item}
                    <tr>
                      <td class="px-6 py-4">
                        <div class="text-gray-900">{item.name} {#if item.sub}<span class="text-gray-400">|</span> <span class="text-indigo-600">{item.sub}</span>{/if}</div>
                      </td>
                      <td class="px-6 py-4 text-right text-gray-900">{currency(item.unit)}</td>
                      <td class="px-6 py-4 text-right text-gray-900">{item.qty}</td>
                      <td class="px-6 py-4 text-right text-gray-900">{currency(item.unit * item.qty)}</td>
                    </tr>
                  {/each}
                </tbody>
                <tfoot>
                  <tr class="bg-gray-50">
                    <td class="px-6 py-4 text-right font-semibold text-gray-900" colspan="3">Order Total:</td>
                    <td class="px-6 py-4 text-right font-semibold text-gray-900">{currency(orderTotal)}</td>
                  </tr>
                </tfoot>
              </table>
            </div>
          </div>

          <!-- Tabs -->
          <div class="px-4">
            <div class="border-b border-gray-200">
              <nav class="-mb-px flex gap-6" aria-label="Tabs">
                {#each ["Collaborate","Attachments"] as tab}
                  <button
                    class="whitespace-nowrap border-b-2 px-1 pb-2 text-sm font-medium transition"
                    class:border-indigo-600={activeTab===tab}
                    class:text-indigo-600={activeTab===tab}
                    class:border-transparent={activeTab!==tab}
                    class:text-gray-500={activeTab!==tab}
                    on:click={() => activeTab = tab as typeof activeTab}>
                    {tab}
                  </button>
                {/each}
              </nav>
            </div>

            <div class="py-4">
              {#if activeTab === "Collaborate"}
                <div class="text-sm text-gray-600">Start a thread with the supplier hereâ€¦</div>
              {:else}
                <div class="text-sm text-gray-600">Upload and view attachments hereâ€¦</div>
              {/if}
            </div>
          </div>
        </div>
      </section>

      <!-- Right: Teams sidebar -->
      <aside class="col-span-12 lg:col-span-4">
        <div class="space-y-6">
          <!-- Requester Team -->
          <div class="rounded-xl border border-gray-200 bg-white p-4">
            <div class="mb-3 flex items-center justify-between">
              <h3 class="text-sm font-semibold text-gray-900">Requester Team</h3>
              <button class="text-indigo-600 text-sm font-medium hover:underline">Edit</button>
            </div>
            <div class="flex items-center gap-3">
              <img class="h-10 w-10 rounded-full object-cover" src="https://i.pravatar.cc/100?img=5" alt="Owner"/>
              <div>
                <div class="text-gray-900 font-medium">Avery Smith</div>
                <div class="text-xs text-gray-500">Gazelle Pharma - Cambridge</div>
                <div class="text-xs text-gray-400 mt-1">Owner</div>
              </div>
            </div>
          </div>

          <!-- Supplier Team -->
          <div class="rounded-xl border border-gray-200 bg-white p-4">
            <div class="mb-3 flex items-center justify-between">
              <h3 class="text-sm font-semibold text-gray-900">Supplier Team</h3>
              <button class="text-indigo-600 text-sm font-medium hover:underline">Edit</button>
            </div>

            <div class="space-y-4">
              <div class="flex items-center gap-3">
                <img class="h-10 w-10 rounded-full object-cover" src="https://i.pravatar.cc/100?img=11" alt="Member"/>
                <div>
                  <div class="text-gray-900 font-medium">Brendan Harvey</div>
                  <div class="text-xs text-gray-500">Project Manager at {test?.supplier_name ?? "NovaSphere Labs"}</div>
                </div>
              </div>
              <div class="flex items-center gap-3">
                <img class="h-10 w-10 rounded-full object-cover" src="https://i.pravatar.cc/100?img=15" alt="Member"/>
                <div>
                  <div class="text-gray-900 font-medium">Suzana Marusic</div>
                  <div class="text-xs text-gray-500">President at {test?.supplier_name ?? "NovaSphere Labs"}</div>
                </div>
              </div>
              <div class="flex items-center gap-3">
                <img class="h-10 w-10 rounded-full object-cover" src="https://i.pravatar.cc/100?img=32" alt="Member"/>
                <div>
                  <div class="text-gray-900 font-medium">Kacey Caradonna</div>
                  <div class="text-xs text-gray-500">Director of Product at {test?.supplier_name ?? "NovaSphere Labs"}</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </aside>
    </div>
  {/if}
</main>

<style>
  /* Keep your existing styles if needed, Tailwind handles most of this layout */
</style>
