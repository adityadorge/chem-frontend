<script lang='ts'>
  import { goto } from '$app/navigation';
  import { Toaster } from 'svelte-sonner';
  // Receive the entire test object
  import { user, isAuthenticated } from "$lib/store";
  import { get } from "svelte/store";
  import { writable } from "svelte/store";

  interface Test {
    id: number;
    test_name: string;
    image_url: string;
    test_description: string;
    test_price: number;
  }

  // Accept either a single test (backwards compatible) or an array of tests
  export let test: Test | null = null;
  export let tests: Test[] = [];

  // View mode: 'grid' (catalogue) or 'list'
  export let view: 'grid' | 'list' = 'grid';

  // Back-compat props (kept but not used when rendering a list)
  export let icon = test?.image_url || "/assets/default-icon.svg";
  export let title = test?.test_name || "Default Title";
  export let description = test?.test_description || "Default description";
  export let info = test ? `Price: ₹${test.test_price}` : "Default info";
  export let price = "$0.00";

  let showPopup = false;

  // Normalize items we render
  let items: Test[] = [];
  $: items = tests && tests.length > 0 ? tests : (test ? [test] : []);

  function togglePopup() {
    showPopup = !showPopup;
  }

  function setView(next: 'grid' | 'list') {
    view = next;
  }
</script>

<Toaster richColors />

<div class="toolbar">
  <div class="view-toggle" role="group" aria-label="Toggle view">
    <button
      class:selected={view === 'grid'}
      aria-pressed={view === 'grid'}
      on:click={() => setView('grid')}
      type="button"
      title="Catalogue view"
    >
      Catalogue
    </button>
    <button
      class:selected={view === 'list'}
      aria-pressed={view === 'list'}
      on:click={() => setView('list')}
      type="button"
      title="List view"
    >
      List
    </button>
  </div>
</div>

{#if items.length === 0}
  <p class="empty">No tests found.</p>
{:else}
  {#if view === 'grid'}
    <div class="cards-grid">
      {#each items as t}
        <div class="course">
          <div class="course-preview">
              <span class="highlight-text top-label">Test</span>
              <h4>{t.test_name}</h4>
              <a href="#" on:click|preventDefault={() => goto(`/tests/${t.id}`)}>View all details</a>
          </div>
          <div class="course-info">
              <span class="highlight-text top-label">Description</span>
              <p class="truncate-multi">{t.test_description}</p>
              <button class="btn" on:click={togglePopup}>Continue</button>
          </div>
        </div>
      {/each}
    </div>
  {:else}
    <div class="list-container">
      {#each items as t}
        <div
          class="list-row"
          role="button"
          tabindex="0"
          on:click={() => goto(`/tests/${t.id}`)}
          on:keydown={(e) => (e.key === 'Enter' || e.key === ' ') && goto(`/tests/${t.id}`)}
        >
          <div class="list-left">
            <div class="badge">Test</div>
            <div class="title">{t.test_name}</div>
            <div class="desc truncate-one">{t.test_description}</div>
          </div>
          <div class="list-right">
            <div class="price">₹{t.test_price}</div>
            <button class="btn small" on:click|stopPropagation={togglePopup}>Continue</button>
          </div>
        </div>
      {/each}
    </div>
  {/if}
{/if}

<style>
  .toolbar {
    display: flex;
    justify-content: flex-end;
    margin: 8px 20px 0 20px;
  }

  .view-toggle {
    background: #f2f5ff;
    border-radius: 999px;
    padding: 4px;
    display: inline-flex;
    gap: 4px;
  }
  .view-toggle button {
    background: transparent;
    border: 0;
    padding: 8px 12px;
    border-radius: 999px;
    color: #1746a2;
    font-weight: 600;
    cursor: pointer;
  }
  .view-toggle button.selected {
    background: #1746a2;
    color: #fff;
  }

  .empty {
    margin: 20px;
    color: #6b7280;
  }

  .highlight-text {
    background: #e3eafe;
    color: #1746a2;
    border-radius: 100px;
    padding: 2px 10px;
    font-size: 0.9rem;
    font-weight: 100;
    margin-right: 6px;
    margin-bottom: 4px;
    display: inline-block;
  }
  .highlight-text.top-label {
    position: absolute;
    top: 18px;
    left: 30px;
    z-index: 2;
    margin-bottom: 0;
  }

  /* Grid (catalogue) view */
  .cards-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(500px, 1fr));
    gap: 20px;
    padding: 20px;
  }

  .course {
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 10px 10px rgba(0, 0, 0, 0.12);
    display: flex;
    overflow: hidden;
    width: 100%;
    height: 220px;
    min-width: 0;
    margin: 0; /* grid provides spacing */
  }

  .course-preview {
    background-color: #1746a2;
    color: #fff;
    padding: 18px;
    max-width: 180px;
    min-width: 180px;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    overflow: hidden;
    position: relative;
  }
  .course-preview .highlight-text.top-label {
    position: absolute;
    top: 18px;
    left: 50%;
    transform: translateX(-50%);
    margin-bottom: 0;
    margin-left: 0;
    margin-top: 0;
    text-align: center;
    display: block;
    width: max-content;
    z-index: 2;
  }

  .course-info {
    padding: 48px;
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    overflow: hidden;
  }
  .course-info .highlight-text.top-label {
    position: absolute;
    top: 18px;
    left: 50%;
    transform: translateX(-50%);
    margin-bottom: 16px;
    margin-left: 0;
    margin-top: 0;
    text-align: center;
    display: block;
    width: max-content;
    z-index: 2;
  }

  .course a {
    color: #fff;
    display: inline-block;
    font-size: 12px;
    opacity: 0.9;
    margin-top: 30px;
    text-decoration: none;
  }

  .btn {
    background-color: #1746a2;
    border: 0;
    border-radius: 50px;
    color: #fff;
    font-size: 14px;
    padding: 8px 18px;
    position: absolute;
    bottom: 30px;
    right: 30px;
    letter-spacing: 1px;
    cursor: pointer;
  }
  .btn.small {
    position: static;
    padding: 6px 14px;
    font-size: 13px;
  }

  .truncate-multi {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: normal;
    max-width: 100%;
    max-height: 3.2em;
  }

  /* List view */
  .list-container {
    display: flex;
    flex-direction: column;
    gap: 12px;
    padding: 12px 20px 20px 20px;
  }
  .list-row {
    display: grid;
    grid-template-columns: 1fr auto;
    align-items: center;
    gap: 16px;
    background: #fff;
    border-radius: 10px;
    box-shadow: 0 6px 12px rgba(0,0,0,0.08);
    padding: 16px 20px;
    cursor: pointer;
  }
  .list-row:hover {
    box-shadow: 0 10px 16px rgba(0,0,0,0.12);
  }
  .list-left {
    min-width: 0;
  }
  .badge {
    display: inline-block;
    background: #e3eafe;
    color: #1746a2;
    border-radius: 999px;
    font-size: 12px;
    padding: 2px 10px;
    margin-bottom: 6px;
  }
  .title {
    font-weight: 700;
    color: #111827;
    margin-bottom: 4px;
  }
  .desc {
    color: #6b7280;
    font-size: 14px;
  }
  .truncate-one {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .list-right {
    display: flex;
    align-items: center;
    gap: 12px;
  }
  .price {
    font-weight: 700;
    color: #1746a2;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .cards-grid {
      grid-template-columns: 1fr;
    }
    .course {
      height: auto;
      min-height: 220px;
    }
    .course-info {
      padding: 24px;
    }
    .btn {
      position: static;
      margin-top: auto;
      align-self: flex-end;
    }
    .list-row {
      grid-template-columns: 1fr;
      align-items: flex-start;
    }
    .list-right {
      justify-content: space-between;
      width: 100%;
    }
  }
</style>